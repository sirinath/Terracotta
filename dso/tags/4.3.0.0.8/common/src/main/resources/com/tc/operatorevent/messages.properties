#
# All content copyright (c) 2003-2006 Terracotta, Inc.,
# except as may otherwise be noted in a separate copyright notice.
# All rights reserved
#

#Memory Manager
long.gc = Detected long GC>{0}ms. GC count:{1}. GC Time:{2}ms. Frequent long GC cycles cause severe performance degradation.

#node connect/disconnect
node.availability = Node {0} {1} the cluster
handshake.reject = An {0} client {1} tried to connect to {2} server. Connection refused!!

# active/passive stripe disconnect
active.server.disconnect = Active server {0} left the cluster
mirror.server.disconnect = Mirror server {0} left the cluster

#DGC
dgc.started = DGC[ {0} ] started.
dgc.finished = DGC[ {0} ] finished. Begin Count : {1} Collected : {2} Time Taken : {3} ms Live Objects : {4}
dgc.canceled = DGC[ {0} ] cycle canceled
inlineDgc.cleanup.started = Inline DGC [ {0} ] reference cleanup started.
inlineDgc.cleanup.finished = Inline DGC [ {0} ] reference cleanup finished. Begin Count : {1} Collected : {2} Time Taken : {3} ms Live Objects : {4}
inlineDgc.cleanup.canceled = Inline DGC [ {0} ] reference cleanup canceled.

#State changed
node.state = Moved to {0}

#zap events
zap.received = SPLIT BRAIN, {0} and {1} are ACTIVE
zap.accepted = {0} has more clients. Exiting!!
dirty.db = Started with dirty database. Exiting!! Restart {0}

#server map events
servermap.eviction = DCV2 Eviction - Time taken (msecs)={0}, Number of entries evicted={1}, Number of segments over threshold={2}, Total Overshoot={3}

#Cluster configuration events
time.different = System time not in sync. {0} {1} {2} by {3} seconds 

#config events
config.reloaded = Reloaded {0}

#resource management
resource.nearcapacity= {0} is nearing capacity limit, performance may be degraded - {1}% usage
resource.fullcapacity= {0} is at over capacity limit, no further additive operations will be accepted - {1}% usage
resource.capacityrestored= {0} capacity has been restored, performance has returned to normal - {1}% usage