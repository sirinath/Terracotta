
## In each of the messages below {0} will be replaced with the symbolic name of the bundle
installing.bundle   = Installing module ''{0}''
bundle.installed    = Module ''{0}'' successfully installed
uninstalling.bundle = Uninstalling module ''{0}''
bundle.uninstalled  = Module ''{0}'' successfully uninstalled
starting.bundle     = Starting module ''{0}''
bundle.started      = Module ''{0}'' successfully started
stopping.bundle     = Stopping module ''{0}''
bundle.stopped      = Module ''{0}'' stopped

## {0} here is the class/interface name of the service
registering.service = Registering module service ''{0}'' with properties: ''{1}''
service.registered  = Module service ''{0}'' successfully registered

## {0} does nothing, this has no specific context
stopping.framework = Stopping module framework
framework.shutdown = Module framework shut down

## {0} warnings
warn.missing.repository        = The bundle repository ''{0}'', does not exist
warn.skipped.activation        = Skipping bundle activation for ''{0}'', it is either active or already starting
warn.skipped.file.installation = Skipped installation of bundle file ''{0}'' - it does not appear to be a valid config-bundle file
warn.skipped.file.unreadable   = Skipped installation of bundle file ''{0}'' - unable to read the contents of its manifest: ''{1}''
warn.skipped.misnamed.file     = Skipped config-bundle installation of file ''{0}'', config-bundle filenames are expected to conform to the pattern: ''{1}''

## {0} errors
error.invalid.repository        = Invalid bundle repository specified in the URL: ''{0}''
error.bundle.inaccessible       = Unable to open the bundle at: ''{0}'' 
error.bundle.not.found          = Unable to locate the config-bundle file for bundle ''{0}'' version ''{1}'' using group-id ''{2}''; check that module name and version number you specified is correct; config-bundle filenames are extrapolated by concatenating the bundle name and version number, the resulting filename is expected to conform to the following pattern: {3}
error.bundle.unresolved         = Unable to resolve bundle for URL: ''{0}''; check that your repositories are configured correctly 
error.bundle.dependency.missing = Required bundle not found: ''{0}'' version ''{1}''     
